import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

public class QuanLySach {
    private final List<Sach> danhSach;

    public QuanLySach() {
        this.danhSach = new ArrayList<>();
    }

    // üîπ Th√™m s√°ch (ki·ªÉm tra tr√πng m√£)
    public void themSach(Sach s) {
        if (s == null) {
            System.out.println(" Kh√¥ng th·ªÉ th√™m s√°ch null.");
            return;
        }
        if (timKiemObj(s.getMaSach()).isPresent()) {
            System.out.println("Ô∏è M√£ s√°ch ƒë√£ t·ªìn t·∫°i: " + s.getMaSach() + " ‚Äî kh√¥ng th√™m.");
            return;
        }
        danhSach.add(s);
        System.out.println(" ƒê√£ th√™m s√°ch: " + s.getMaSach());
    }

    // üîπ X√≥a s√°ch theo m√£
    public boolean xoaSach(String maSach) {
        boolean removed = danhSach.removeIf(s -> s.getMaSach().equalsIgnoreCase(maSach));
        if (removed)
            System.out.println(" ƒê√£ x√≥a s√°ch c√≥ m√£: " + maSach);
        else
            System.out.println(" Kh√¥ng t√¨m th·∫•y s√°ch c√≥ m√£: " + maSach);
        return removed;
    }

    // üîπ C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng theo m√£ s√°ch
    public boolean capNhatSoLuong(String maSach, int soLuongMoi) {
        Optional<Sach> opt = timKiemObj(maSach);
        if (opt.isPresent()) {
            Sach s = opt.get();
            s.setSoLuong(soLuongMoi);
            System.out.println(" C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s√°ch (m√£=" + maSach + ") th√†nh: " + soLuongMoi);
            return true;
        } else {
            System.out.println(" Kh√¥ng t√¨m th·∫•y s√°ch c√≥ m√£: " + maSach);
            return false;
        }
    }

    // üîπ C·∫≠p nh·∫≠t gi√° c∆° b·∫£n
    public boolean capNhatGiaCoBan(String maSach, double giaMoi) {
        Optional<Sach> opt = timKiemObj(maSach);
        if (opt.isPresent()) {
            Sach s = opt.get();
            s.setGiaCoBan(giaMoi);
            System.out.println(" C·∫≠p nh·∫≠t gi√° c∆° b·∫£n s√°ch (m√£=" + maSach + ") th√†nh: " + giaMoi);
            return true;
        } else {
            System.out.println(" Kh√¥ng t√¨m th·∫•y s√°ch c√≥ m√£: " + maSach);
            return false;
        }
    }

    // üîπ T√¨m ki·∫øm ƒë·ªëi t∆∞·ª£ng theo m√£
    public Optional<Sach> timKiemObj(String maSach) {
        return danhSach.stream()
                .filter(s -> s.getMaSach().equalsIgnoreCase(maSach))
                .findFirst();
    }

    // üîπ T√¨m ki·∫øm v√† in k·∫øt qu·∫£
    public void timKiemVaIn(String maSach) {
        timKiemObj(maSach).ifPresentOrElse(
                s -> {
                    System.out.println(" T√¨m th·∫•y s√°ch:");
                    System.out.println(s);
                    System.out.println("  Gi√° b√°n: " + s.TinhGiaBan());
                },
                () -> System.out.println(" Kh√¥ng t√¨m th·∫•y s√°ch c√≥ m√£: " + maSach)
        );
    }

    // üîπ Hi·ªÉn th·ªã danh s√°ch t·∫•t c·∫£ s√°ch
    public void hienThiDanhSach() {
        if (danhSach.isEmpty()) {
            System.out.println(" Danh s√°ch r·ªóng.");
            return;
        }
        System.out.println("===== DANH S√ÅCH S√ÅCH =====");
        for (Sach s : danhSach) {
            System.out.println(s);
        }
        System.out.println("==========================");
    }

    // üîπ T·ªïng s·ªë l∆∞·ª£ng s√°ch
    public int soLuongSach() {
        return danhSach.size();
    }

    // üîπ L·∫•y danh s√°ch (sao ch√©p)
    public List<Sach> getDanhSach() {
        return new ArrayList<>(danhSach);
    }
}
